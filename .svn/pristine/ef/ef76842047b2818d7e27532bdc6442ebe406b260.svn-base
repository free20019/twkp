package com.twkj.service;

import com.twkj.helper.JacksonUtil;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;

import javax.servlet.http.HttpServletRequest;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

/**
 * @author: xianlehuang
 * @Description:人事
 * @date: 2019/11/13 - 9:33
 */
@Service
public class PersonnelMattersService {
    @Autowired
    protected JdbcTemplate jdbcTemplate;

    private JacksonUtil jacksonUtil = JacksonUtil.buildNormalBinder();


    public String getUser(HttpServletRequest request) {
        String sql = "select u.*, b.bm department from tuser u, tb_bm b" +
                " where u.bm = b.code" +
                " order by u.username";
        List<Map<String, Object>> list=jdbcTemplate.queryForList(sql);
        for (int i = 0; i < list.size(); i++) {
            list.get(i).put("COMMIT_DATE",list.get(i).get("COMMIT_DATE")==null?"":String.valueOf(list.get(i).get("COMMIT_DATE")).substring(0,10));
        }
        return jacksonUtil.toJson(list);
    }

    public String findPersonalMorningReport(HttpServletRequest request) {
        String person_name = request.getParameter("person_name")==null?"":request.getParameter("person_name");
        String department = request.getParameter("department")==null?"":request.getParameter("department");
        String tj = "";
        if(person_name!=null&&!person_name.isEmpty()&&!person_name.equals("null")&&person_name.length()>0){
            tj += " and a.person_name like '%"+person_name+"%'";
        }
        if(department!=null&&!department.isEmpty()&&!department.equals("null")&&department.length()>0){
            tj += " and b.bm like '%"+department+"%'";
        }
//        tb_gw t, tuser c, tb_bm v where  v.bm like ? and c.username like ? and c.bm = v.code and t.id = c.gw
        String sql = "select a.*, b.bm department from TB_PERSONAL_MORNING_REPORT a , tuser u, tb_bm b" +
                " where a.userid = u.userid  and u.bm = b.code ";
        sql += tj;
        sql +=" order by a.COMMIT_DATE desc, a.person_name";
        List<Map<String, Object>> list=jdbcTemplate.queryForList(sql);
        for (int i = 0; i < list.size(); i++) {
            list.get(i).put("COMMIT_DATE",list.get(i).get("COMMIT_DATE")==null?"":String.valueOf(list.get(i).get("COMMIT_DATE")).substring(0,10));
        }
        return jacksonUtil.toJson(list);
    }

    public String findWorkSummary(HttpServletRequest request) {
        String person_name = request.getParameter("person_name")==null?"":request.getParameter("person_name");
        String department = request.getParameter("department")==null?"":request.getParameter("department");
        String tj = "";
        if(person_name!=null&&!person_name.isEmpty()&&!person_name.equals("null")&&person_name.length()>0){
            tj += " and u.username like '%"+person_name+"%'";
        }
        if(department!=null&&!department.isEmpty()&&!department.equals("null")&&department.length()>0){
            tj += " and a.department like '%"+department+"%'";
        }
        String sql = "select a.*, b.bm,g.gw,u.username from tb_work_summary a ,tuser u, tb_bm b,tb_gw g" +
                " where a.userid = u.userid and u.bm = b.code and g.id = u.gw";
        sql += tj;
        sql +=" order by a.CREATE_TIME desc";
        List<Map<String, Object>> list=jdbcTemplate.queryForList(sql);
        for (int i = 0; i < list.size(); i++) {
            list.get(i).put("JOIN_TIME",list.get(i).get("JOIN_TIME")==null?"":String.valueOf(list.get(i).get("JOIN_TIME")).substring(0,10));
            list.get(i).put("EVALUATION_DATE",list.get(i).get("EVALUATION_DATE")==null?"":String.valueOf(list.get(i).get("EVALUATION_DATE")).substring(0,10));
            list.get(i).put("CREATE_TIME",list.get(i).get("CREATE_TIME")==null?"":String.valueOf(list.get(i).get("CREATE_TIME")).substring(0,10));
        }
        return jacksonUtil.toJson(list);
    }

    public String addWorkSummary(HttpServletRequest request) {
        String userid = request.getParameter("userid")==null?"":request.getParameter("userid");
        String age = request.getParameter("age")==null?"":request.getParameter("age");
        String sex = request.getParameter("sex")==null?"":request.getParameter("sex");
        String education = request.getParameter("education")==null?"":request.getParameter("education");
        String politic_countenance = request.getParameter("politic_countenance")==null?"":request.getParameter("politic_countenance");
        String join_time = request.getParameter("join_time")==null?"":request.getParameter("join_time");
        String work_summary = request.getParameter("work_summary")==null?"":request.getParameter("work_summary");
        String post = request.getParameter("post")==null?"":request.getParameter("post");
        String department = request.getParameter("department")==null?"":request.getParameter("department");
        int count = 0;
        String cx = "select * from tuser where userid='"+userid+"'";
        List<Map<String, Object>> list = jdbcTemplate.queryForList(cx);
        if(list.size()>0){
            String insert = "insert into tb_work_summary (userid, person_name,age,sex,education,politic_countenance,join_time,work_summary,post,department,CREATE_TIME) values" +
                    "('"+userid+"','"+list.get(0).get("USERNAME")+"','"+age+"','"+sex+"','"+education+"','"+politic_countenance+"',to_date('"+join_time+"','yyyy-mm-dd'),'"+work_summary+"','"+post+"','"+department+"',sysdate)";
            count = jdbcTemplate.update(insert);
        }
        return jacksonUtil.toJson(count);
    }

    public String evaluateWorkSummary(HttpServletRequest request) {
        String department_leader = request.getParameter("department_leader")==null?"":request.getParameter("department_leader");
        String evaluation_date = request.getParameter("evaluation_date")==null?"":request.getParameter("evaluation_date");
        String department_evaluation = request.getParameter("department_evaluation")==null?"":request.getParameter("department_evaluation");
        String id = request.getParameter("id")==null?"":request.getParameter("id");
        int count = 0;
        String insert = "update tb_work_summary set " +
                " department_leader='"+department_leader+"'" +
                ",evaluation_date= to_date('"+evaluation_date+"','yyyy-mm-dd')" +
                ",department_evaluation='"+department_evaluation+"'" +
                " where id='"+id+"'";
        count = jdbcTemplate.update(insert);
        return jacksonUtil.toJson(count);
    }

    public String findMeetingMinutes(HttpServletRequest request) {
        String stime = request.getParameter("stime")==null?"":request.getParameter("stime");
        String etime = request.getParameter("etime")==null?"":request.getParameter("etime");
        List<Map<String, Object>> list= new ArrayList<Map<String, Object>>();
        String tj = "";
        if(stime!=null&&!stime.isEmpty()&&!stime.equals("null")&&stime.length()>0){
            tj += " and a.MEETING_TIME >= to_date('"+stime+"','yyyy-mm-dd')";
        }
        if(etime!=null&&!etime.isEmpty()&&!etime.equals("null")&&etime.length()>0){
            tj += " and a.MEETING_TIME <= to_date('"+etime+"','yyyy-mm-dd')";
        }
        String sql = "select a.* from TB_MEETING_MINUTES a" +
                " where 1=1";
        sql += tj;
        sql +=" order by a.MEETING_TIME desc, a.id desc";
        try {
            list=jdbcTemplate.queryForList(sql);
        }catch (Exception e){
            return jacksonUtil.toJson(list);
        }

        for (int i = 0; i < list.size(); i++) {
            list.get(i).put("MEETING_TIME",list.get(i).get("MEETING_TIME")==null?"":String.valueOf(list.get(i).get("MEETING_TIME")).substring(0,10));
        }
        return jacksonUtil.toJson(list);
    }

    public String addMeetingMinutes(HttpServletRequest request) {
        String meeting_time = request.getParameter("meeting_time")==null?"":request.getParameter("meeting_time");
        String meeting_place = request.getParameter("meeting_place")==null?"":request.getParameter("meeting_place");
        String participants = request.getParameter("participants")==null?"":request.getParameter("participants");
        String host_meeting = request.getParameter("host_meeting")==null?"":request.getParameter("host_meeting");
        String meeting_record = request.getParameter("meeting_record")==null?"":request.getParameter("meeting_record");
        String job_summary = request.getParameter("job_summary")==null?"":request.getParameter("job_summary");
        String next_week_work = request.getParameter("next_week_work")==null?"":request.getParameter("next_week_work");
        String decision_matter = request.getParameter("decision_matter")==null?"":request.getParameter("decision_matter");
        int count = 0;
        String insert = "insert into TB_MEETING_MINUTES (meeting_time, meeting_place,participants,host_meeting,meeting_record,job_summary,next_week_work,decision_matter) values" +
                "(to_date('"+meeting_time+"','yyyy-mm-dd'),'"+meeting_place+"','"+participants+"','"+host_meeting+"','"+meeting_record+"','"+job_summary+"','"+next_week_work+"','"+decision_matter+"')";
        try {
            count = jdbcTemplate.update(insert);
        }catch (Exception e){
            count = 0;
        }
        return jacksonUtil.toJson(count);
    }

    public String findTurnoverHandover(HttpServletRequest request) {
        String person_name = request.getParameter("person_name")==null?"":request.getParameter("person_name");
        String post = request.getParameter("post")==null?"":request.getParameter("post");
        String tj = "";
        List<Map<String, Object>> list= new ArrayList<Map<String, Object>>();
        if(person_name!=null&&!person_name.isEmpty()&&!person_name.equals("null")&&person_name.length()>0){
            tj += " and a.person_name like '%"+person_name+"%'";
        }
        if(post!=null&&!post.isEmpty()&&!post.equals("null")&&post.length()>0){
            tj += " and a.post like '%"+post+"%'";
        }
        String sql = "select a.* from TB_TURNOVER_HANDOVER a" +
                " where 1=1 ";
        sql += tj;
        sql +=" order by a.ID desc";
        try {
            list=jdbcTemplate.queryForList(sql);
        }catch (Exception e){
            return jacksonUtil.toJson(list);
        }
        for (int i = 0; i < list.size(); i++) {
            list.get(i).put("SEPARATION_TIME",list.get(i).get("SEPARATION_TIME")==null?"":String.valueOf(list.get(i).get("SEPARATION_TIME")).substring(0,10));
            list.get(i).put("MANAGER_TIME",list.get(i).get("MANAGER_TIME")==null?"":String.valueOf(list.get(i).get("MANAGER_TIME")).substring(0,10));
            list.get(i).put("DEPT_TIME",list.get(i).get("DEPT_TIME")==null?"":String.valueOf(list.get(i).get("DEPT_TIME")).substring(0,10));
            list.get(i).put("NET_TIME",list.get(i).get("NET_TIME")==null?"":String.valueOf(list.get(i).get("NET_TIME")).substring(0,10));
            list.get(i).put("GENERAL_TIME",list.get(i).get("GENERAL_TIME")==null?"":String.valueOf(list.get(i).get("GENERAL_TIME")).substring(0,10));

            list.get(i).put("DEPT_STATUS",list.get(i).get("DEPT_NAME")==null&&"".equals(list.get(i).get("DEPT_TIME"))&&list.get(i).get("DEPT_REMARKS")==null?"未审核":(list.get(i).get("DEPT_NAME")!=null?"审核通过（已签字）":"其他"));
            list.get(i).put("NET_STATUS",list.get(i).get("NET_NAME")==null&&"".equals(list.get(i).get("NET_TIME"))&&list.get(i).get("NET_REMARKS")==null?"未审核":(list.get(i).get("NET_NAME")!=null?"审核通过（已签字）":"其他"));
            list.get(i).put("GENERAL_STATUS",list.get(i).get("GENERAL_NAME")==null&&"".equals(list.get(i).get("GENERAL_TIME"))&&list.get(i).get("GENERAL_REMARKS")==null?"未审核":(list.get(i).get("GENERAL_NAME")!=null?"审核通过（已签字）":"其他"));
        }
        return jacksonUtil.toJson(list);
    }

    public String addTurnoverHandover(HttpServletRequest request) {
        String person_name = request.getParameter("person_name")==null?"":request.getParameter("person_name");
        String post = request.getParameter("post")==null?"":request.getParameter("post");
        String separation_time = request.getParameter("separation_time")==null?"":request.getParameter("separation_time");
        String work_handover = request.getParameter("work_handover")==null?"":request.getParameter("work_handover");
        String net_handover = request.getParameter("net_handover")==null?"":request.getParameter("net_handover");
        String general_handover = request.getParameter("general_handover")==null?"":request.getParameter("general_handover");
        int count = 0;
        String insert = "insert into TB_TURNOVER_HANDOVER (person_name, post,separation_time,work_handover,net_handover,general_handover) values" +
                "('"+person_name+"','"+post+"',to_date('"+separation_time+"','yyyy-mm-dd'),'"+work_handover+"','"+net_handover+"','"+general_handover+"')";
        try {
            count = jdbcTemplate.update(insert);
        }catch (Exception e){
            count = 0;
        }
        return jacksonUtil.toJson(count);
    }

    public String auditTurnoverHandover(HttpServletRequest request) {
        String id = request.getParameter("id")==null?"":request.getParameter("id");
        String type = request.getParameter("type")==null?"":request.getParameter("type");
        int count = 0;
        String insert = "";
        if("1".equals(type)){
            String dept_name = request.getParameter("dept_name")==null?"":request.getParameter("dept_name");
            String dept_time = request.getParameter("dept_time")==null?"":request.getParameter("dept_time");
            String dept_remarks = request.getParameter("dept_remarks")==null?"":request.getParameter("dept_remarks");
            insert += "update TB_TURNOVER_HANDOVER set " +
                    " dept_name='"+dept_name+"'" +
                    ",dept_time= to_date('"+dept_time+"','yyyy-mm-dd')" +
                    ",dept_remarks='"+dept_remarks+"'" +
                    " where id='"+id+"'";
        }else if("2".equals(type)){
            String net_name = request.getParameter("net_name")==null?"":request.getParameter("net_name");
            String net_time = request.getParameter("net_time")==null?"":request.getParameter("net_time");
            String net_remarks = request.getParameter("net_remarks")==null?"":request.getParameter("net_remarks");
            String general_name = request.getParameter("general_name")==null?"":request.getParameter("general_name");
            String general_time = request.getParameter("general_time")==null?"":request.getParameter("general_time");
            String general_remarks = request.getParameter("general_remarks")==null?"":request.getParameter("general_remarks");
            insert += "update TB_TURNOVER_HANDOVER set " +
                    " net_name='"+net_name+"'" +
                    ",net_time= to_date('"+net_time+"','yyyy-mm-dd')" +
                    ",net_remarks='"+net_remarks+"'" +
                    ",general_name='"+general_name+"'" +
                    ",general_time= to_date('"+general_time+"','yyyy-mm-dd')" +
                    ",general_remarks='"+general_remarks+"'" +
                    " where id='"+id+"'";

        }else if("3".equals(type)){
            String manager = request.getParameter("manager")==null?"":request.getParameter("manager");
            String manager_time = request.getParameter("manager_time")==null?"":request.getParameter("manager_time");
            insert += "update TB_TURNOVER_HANDOVER set " +
                    " manager='"+manager+"'" +
                    ",manager_time= to_date('"+manager_time+"','yyyy-mm-dd')" +
                    " where id='"+id+"'";
        }
        try {
            count = jdbcTemplate.update(insert);
        }catch (Exception e){
            count = 0;
        }
        return jacksonUtil.toJson(count);
    }
}
